---
- name: Generate configuration for all Channels
  include_tasks: tasks/generate_channel_config.yaml
  with_items: "{{ channels }}"
  loop_control:
    loop_var: channel

- name: Copy channel artifacts to NFS
  become: yes
  copy:
    src: "{{ channel_artifacts_dir }}"
    dest: "{{ nfs_server_mount_dir }}"

- name: Add pseudo DNS mapping of Orderer and peer serivce to NodePort in /etc/hosts
  become: yes
  blockinfile:
    path: /etc/hosts
    block: |
      {{ groups['kube-node'][0] }} {% for i in range(fabric_num_orderer|int) %}orderer{{ loop.index0 }}.{{ fabric_orderer_domain }} {% endfor %} {% for i in range(fabric_num_orgs|int) %}ca.org{{ loop.index }} {% endfor %}

      {{ groups['kube-node'][1] }} {% for i in range(fabric_num_orgs|int) %}{% set org_index = loop.index %}{% for j in range(fabric_peers_per_org|int) %}peer{{ loop.index0 }}.org{{ org_index }} {% endfor %}{% endfor %}
    marker: "# {mark} ANSIBLE MANAGED BLOCK: sudo DNS mapping for orderers, peers and ca"

- include_tasks: tasks/check_peers.yaml
  with_sequence: count="{{ fabric_num_orgs|int }}"
  loop_control:
    loop_var: org_num

- name: Waiting for Ports to open for orderer services
  wait_for:
    host: "orderer{{ item }}.{{ fabric_orderer_domain }}"
    port: "{{ node_port_mapping['orderer' + item + '.' + fabric_orderer_domain]['7050'] }}"
    state: started
  with_sequence: start=0 end={{ fabric_num_orderer|int - 1 }}

- include_tasks: tasks/check_zookeeper.yaml
  with_sequence: start=0 end={{ fabric_num_zookeeper|int - 1 }}
  loop_control:
    loop_var: zk_num
  when: fabric_orderer_type == "kafka"

- include_tasks: tasks/check_kafka.yaml
  with_sequence: start=0 end={{ fabric_num_kafka|int - 1 }}
  loop_control:
    loop_var: kafka_num
  when: fabric_orderer_type == "kafka"

- name: Wait 10 seconds for kafka to comeup
  pause:
    seconds: "10"
  when: fabric_orderer_type == "kafka"


