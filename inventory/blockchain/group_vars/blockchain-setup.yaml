# Provide fabric versions as defined here:
# https://hyperledger-fabric.readthedocs.io/en/release-1.2/install.html
fabric_version: 1.2.1
fabric_ca_version: 1.2.1
fabric_couchdb_version: 0.4.12

# Fabric Network Config
fabric_num_orgs: 2
fabric_peers_per_org: 2
fabric_num_orderer: 2
fabric_orderer_address: orderer0.orgorderer1
fabric_orderer_type: solo       # Options: solo/kafka

# Create CLI Pod
fabric_create_cli: false

# Custom fabric container images
fabric_images:
  ca: "hyperledger/fabric-ca:{{ fabric_ca_version }}"
  peer: "hyperledger/fabric-peer:{{ fabric_version }}"
  tools: "hyperledger/fabric-tools:{{ fabric_version }}"
  orderer: "hyperledger/fabric-orderer:{{ fabric_version }}"
  couchdb: "hyperledger/fabric-couchdb:{{ fabric_couchdb_version }}"
  kafka: "hyperledger/fabric-kafka:{{ fabric_couchdb_version }}"
  zookeeper: "hyperledger/fabric-zookeeper:{{ fabric_couchdb_version }}"
  dind: "docker:stable-dind"

# Fabric Configuration
# state_db options couchdb / goleveldb
fabric_state_db: couchdb

# Metrics framework setting
# inventory_dir is an ansible variable which stores location of hosts.ini file
metrics_network_file: "{{ inventory_dir }}/fabric_network.json"
metrics_chaincodes:
  - id: marbles
    path: "contract/marbles/go/"      # NOTE: Path to Directory where chaincode file is located
    metadataPath: "{{ inventory_dir }}/src/contract/marbles/go/metadata/"
    language: golang
    version: v1
    channel: "{{ channel_name }}"
  - id: fabcar
    path: "contract/fabcar/go/"      # NOTE: Path to Directory where chaincode file is located
    metadataPath: ""
    language: golang
    version: v1
    channel: "{{ channel_name }}"
metrics_tx_context:                  # Define which transaction to be performed on which channel. if "null" then first channel will be used
  # Marbles chaincode
  init: "{{ channel_name }}"
  query: "{{ channel_name }}"
  # Fabcar chaincode
  initLedger: "{{ channel_name }}"
  createCar: "{{ channel_name }}"
  queryCar: "{{ channel_name }}"
  queryAllCars: "{{ channel_name }}"
  changeCarOwner: "{{ channel_name }}"

# Config Directories
fabric_config_dirname: fabric-config
fabric_config_dir: "{{ inventory_dir }}/{{ fabric_config_dirname }}"
crypto_config_dirname: crypto-config
crpto_config_dir: "{{ fabric_config_dir }}/{{ crypto_config_dirname }}"
channel_artifacts_dirname: channel-artifacts
channel_artifacts_dir: "{{ fabric_config_dir }}/{{ channel_artifacts_dirname }}"
contract_dirname: "contract"
contract_dir: "{{ inventory_dir }}/src/contract"
templates_dirname: templates
templates_dir: "{{ fabric_config_dir }}/{{ templates_dirname }}"
cryptogen_config: "{{ fabric_config_dir }}/crypto-config.yaml"

# Logging Level:
fabric_cli_loglevel: "INFO"
fabric_peer_loglevel: "INFO"
fabric_orderer_loglevel: "INFO"

# Dynamic Variables
nfs_server_ip: "{{ groups['kube-nfs'][0] }}"
nfs_server_mount_dir: "/opt/share"

# kubernetes kubectl command
k8s_kubectl_cmd: "{{ lookup('env', 'INVENTORY_DIR_PATH') }}/cluster/artifacts/kubectl --kubeconfig={{ lookup('env', 'INVENTORY_DIR_PATH') }}/cluster/artifacts/admin.conf"
